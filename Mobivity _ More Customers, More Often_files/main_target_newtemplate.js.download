var x;
var shareSMSMsg = "";
var shareFBMsg = "";
var shareTwitterMsg = "";
var captured = 0;
var redeemDateTime = new Date();
var isRedeemed = false;
var isRedeeming = false;
var RafEnabled = false;
var GotRAF = false;
var _json;
var StatsShowed = false;
var isSmartSms = false;
var ver = iOSversion();
var Max_num_referals = 0;
var offerfeedback = '';
var fb_post_done = false;

// Location snapshot
var device = {};
var network = '';
var user_agent_string = '';
var browser_cookies_enabled = null;
var browser_online = null;
var geolocation_acc = '';

$(document).ready(function(){

    x = document.getElementById("location");
    isSmartSms = $('#smartsms').text() == 'true';
    RafEnabled = $('#refer').text() == 'true';

    //x.innerHTML="this is ...";
    getUserAgent();
    getLocation();

    // Coupon has RAF enabled
    if (RafEnabled === true) {
        $("#init_refer").show();
        $("#referFinePrint").show();
    }
    // Coupon has ExpiresDate
    if ($('#expire_date').text() != '.') {
        //$('#expire_date').show();
    }
    // Coupon countdown time
    if ($('#CountDownTime').text() == '1') {
        $('#minutes').text('minute');
    } else {
        $('#minutes').text('minutes');
    }

    // Button clicks
    $("#confirmButton").click(function(){
        redeemCoupon();
    });
    $("#referButton").click(function(){
        if (GotRAF !== true) {
            ret = refer();
            if ( ret == 1 ) {
                showRAFDashboard();
            }
        } else {
            showRAFDashboard();
        }
    });
    $("#returnToOfferButton").click(function(){
        showredeemed();
    });

    if ($('#enablefeedback').text() == 'true') {
        $('#feedback').show();

        offerfeedback = $('#offerfeedback').text();

        if (offerfeedback == 'Like')  {
            $("#DisLikeofferfeedback").removeClass('btn-thumbs-down');
            $("#Likeofferfeedback").prop('disabled', true);
            $("#DisLikeofferfeedback").prop('disabled', true);
            $("#DisLikeofferfeedback").addClass('buttonnotclicked');
        } else if (offerfeedback == 'Dislike') {
            $("#Likeofferfeedback").removeClass('btn-thumbs-up');
            $("#Likeofferfeedback").prop('disabled', true);
            $("#DisLikeofferfeedback").prop('disabled', true);
            $("#Likeofferfeedback").addClass('buttonnotclicked');
        }

        $("#Likeofferfeedback").click(function(){
            saveOfferfeedback('Like');
            $("#DisLikeofferfeedback").removeClass('btn-thumbs-down');
            $("#Likeofferfeedback").prop('disabled', true);
            $("#DisLikeofferfeedback").prop('disabled', true);
            $("#DisLikeofferfeedback").addClass('buttonnotclicked');
        });

        $("#DisLikeofferfeedback").click(function(){
            saveOfferfeedback('Dislike');
            $("#Likeofferfeedback").removeClass('btn-thumbs-up');
            $("#Likeofferfeedback").prop('disabled', true);
            $("#DisLikeofferfeedback").prop('disabled', true);
            $("#Likeofferfeedback").addClass('buttonnotclicked');
        });
    }

});

function saveOfferfeedback(value) {
    var redeem = $('#sid').text();
    var actionUrl = '';

    if (isSmartSms){
        actionUrl = '/offersmartfeedback?smartsms='+redeem+'&offerfeedback='+value;
    }else{
        actionUrl = '/offerfeedback?redeemcode='+redeem+'&offerfeedback='+value;
    }

    $.ajax({
    url: actionUrl,
    type: 'GET',
    async: true,
    cache: false,
    timeout: 30000,
        error: function(){
            return true;
        },
        success: function(msg){
            $('#offerfeedback').text(msg);
            return true;
        }
    });
}

function saveLocation(location_captured, caching, high_acc) {
    var redeem = $('#sid').text();
    var location = location_captured;
    var actionUrl = '';
    var data_post = {};

    if (isSmartSms){
        actionUrl = '/historysmartsms';
        data_post = { smartsms : redeem, location : location};
    }else{
        actionUrl = '/historyredeem';
        data_post = { redeem : redeem, location : location};
    }
    captured = 1;

    $.ajax({
    url: actionUrl,
    type: 'POST',
    data: data_post,
    async: false,
    cache: false,
    timeout: 30000,
        error: function(){
            return true;
        },
        success: function(msg){
            $('#location_result').text(msg);
            return true;
        }
    });


    // Additional location logging
    var device_name = (function() {
        if (device.isiOS) return 'ios';
        else if (device.isAndroid) return 'android';
        else if (device.isBlackberry) return 'blackberry';
        else return 'unidentified';
    })();

    //actionUrl = 'https://cfor2881-dot-mobivitysmartsms.appspot.com/loglocation'; // temp hack
    actionUrl = 'https://mobivitysmartsms.appspot.com/loglocation'; // temp hack
    data_post = {
        sid: redeem,
        is_smartsms: isSmartSms,
        geolocation: location,
        geolocation_caching: caching,
        geolocation_high_acc: high_acc,
        geolocation_acc: geolocation_acc,
        device: device_name,
        network: network,
        user_agent_string: user_agent_string,
        browser_cookies_enabled: browser_cookies_enabled,
        browser_online: browser_online
    };

    $.ajax({
    url: actionUrl,
    type: 'POST',
    data: data_post,
    async: false,
    cache: false,
    timeout: 30000,
        error: function(){
            // TODO
            return true;
        },
        success: function(msg){
            // TODO
            return true;
        }
    });
}

function showPosition(position) {
    x.innerHTML = position.coords.latitude + "," + position.coords.longitude;

    geolocation_acc = position.coords.accuracy;

    if (captured == 0) {
        var caching = false;    // temp hack
        var high_acc = true;    // temp hack
        saveLocation(position.coords.latitude + "," + position.coords.longitude, caching, high_acc);
    }
}

function locationFail() {
    x.innerHTML = "0,0";

    geolocation_acc = "Infinity";

    if (captured == 0) {
        var caching = false;    // temp hack
        var high_acc = false;    // temp hack
        saveLocation("0,0", caching, high_acc);
    }
}

function getLocation() {

    if (navigator.geolocation) {

        var options = {
            timeout: Infinity, // default
            enableHighAccuracy: true,
            maximumAge: 0 // default // OR caching ? 300000 : 0 // 5 minutes
        };

        navigator.geolocation.getCurrentPosition(showPosition, locationFail, options);

    } else {
        x.innerHTML = "0,0";
    }
}

function getRAF() {
    var redeem = $('#sid').text();
    var keywordtosubscribeto = $('#keywordtosubscribeto').text();
    var campaignidtosubscribeto = $('#campaignidtosubscribeto').text();
    var campaignid = $('#campaignid').text();
    var achivementcampaignid = $('#achivementcampaignid').text();
    var companyid = $('#companyid').text();
    var keywordsmartsms = $('#keywordsmartsms').text();
    //var actionUrl = 'https://localhost:8383/raf/getraf';
    //var actionUrl = 'https://cfor2881-dot-rafworker-dot-mobivitysmartsms.appspot.com/raf/getraf'; // TODO HACK
    var actionUrl = 'https://rafworker-dot-mobivitysmartsms.appspot.com/raf/getraf';
    var data_post = { };

    if (isSmartSms){
        data_post = { sid : redeem , type : 'smartsms' , keywordtosubscribeto : keywordtosubscribeto, campaignid : campaignid, campaignidtosubscribeto : campaignidtosubscribeto, achivementcampaignid : achivementcampaignid, companyid : companyid };
    }else{
        data_post = { sid : redeem , type : 'redeem' , keywordtosubscribeto : keywordtosubscribeto, campaignid : campaignid, campaignidtosubscribeto : campaignidtosubscribeto, achivementcampaignid : achivementcampaignid, companyid : companyid, keywordsmartsms : keywordsmartsms};
    }

    $.ajax({
    url: actionUrl,
    type: 'POST',
    data: data_post,
    async: false,
    cache: false,
    timeout: 30000,
        error: function(){
            $('#RAF').text('KO');;
            return true;
        },
        success: function(msg){
            _json = msg;
            $('#RAF').text('OK');
            return true;
        }
    });
}

function showRAFDashboard() {
    StatsShowed = true;
    $("#redeem").hide();
    $("#init_refer").hide();
    $("#init_referDashboard").show();
    $("#offerTextOffer").hide();
    $("#offerTextRefer").show();
}

function showredeemed() {
    StatsShowed = false;
    $("#redeem").show();
    if (isRedeemed) { }
    $("#offerTextOffer").show();
    $("#offerTextRefer").hide();
    $("#init_referDashboard").hide();
    $("#init_refer").show();
}

function showexpired() {
    var d = redeemDateTime;
    var day = ("0"+d.getDate()).slice(-2);
    var month = ("0"+(d.getMonth() + 1)).slice(-2);
    var y = ("0"+d.getFullYear()).slice(-2);
    var h = d.getHours();
    var m = d.getMinutes();
    var suffix = "AM";

    if (h == 12) {
        suffix = "PM";
    }
    if (h > 12) {
        suffix = "PM";
        h = h - 12;
    }

    $("#redeem_datetime").html(month + "/" + day + "/" + y + " at " + ('0'+h).slice(-2) + ":" + ('0'+m).slice(-2) + " " + suffix + ".");
    $(".countdownExpiredBefore").hide();
    $(".countdownExpiredAfter").show();
}

function refer() {
    var ret = 0;
    getRAF();
    // console.log(_json)

    if ($('#RAF').text() == 'OK') {
        try{
            //result_json = jQuery.parseJSON(_json);
            result_json = _json;
            ret = 1;
        } catch(err) {
            console.log ('refer() ' + err);
        }
    }

    if (ret == 1 && result_json.result) {

        $('#ShareMessage').text(result_json.ShareMessage);
        shareSMSMsg = result_json.ShareMessage;

        if (result_json.FBShareMessage == '') {
            shareFBMsg = shareSMSMsg;
        } else {
            $('#FBShareMessage').text(result_json.FBShareMessage);
            shareFBMsg = result_json.FBShareMessage;
        }

        if (result_json.TwitterShareMessage =='') {
            shareTwitterMsg = shareSMSMsg;
        } else {
            $('#TwitterShareMessage').text(result_json.TwitterShareMessage);
            shareTwitterMsg = result_json.TwitterShareMessage;
        }

        Max_num_referals = result_json.Max_num_referals;
        shareSMSMsg += ' ' + result_json.ShareURL;
        shareFBMsg += ' ' + result_json.ShareURL;
        shareTwitterMsg += ' ' + result_json.ShareURL;

        $('#referalsLeft').text(result_json.friends);

        if (result_json.friends == '1') {
            $('#friends').text('friend');
        } else {
            $('#friends').text('friends');
        }

        $('#shareURL').text(result_json.ShareURL);
        $('#progresstext').text(result_json.progressBar);
        $('#id').text(result_json.encoded);
        $('#raf_reward').text(result_json.RAF_Reward_Text);
        $('#raf_legal').text(result_json.RAF_Legal_Message);
        progressBarPercentage = result_json.progressBarPercentage;
        $('.progress').css('width',progressBarPercentage+'%');

        if (progressBarPercentage == '0') {
            $('.progress').css("float","none");
        } else {
            $('.progress').css("float","left");
            $('#containerprogress').show();
        }

		GotRAF = true;
    } else{
	    $('#dialog-error').modal('show');
	    ret = 0;
    }

    return ret;
}

function redeemCoupon() {
    var redeem = $('#sid').text();
    var location = $('#location').text();
    var campaignid = $('#campaignid').text();
    var RAFcode = $('#RAFcode').text();
    var campaignidtosubscribeto =  $('#campaignidtosubscribeto').text();
    var data_post = {
        smartsms : redeem,
        redeem : redeem,
        location : location,
        campaignid : campaignid,
        campaignidtosubscribeto : campaignidtosubscribeto,
        RAFcode : RAFcode
    };

    redeemOffer(data_post);

    var result = $('#location_result').text();
    var check_result = result.split(",");
    var check = check_result[0];

    if (check == 'false') {
        $('#dialog-error').modal('show');
    } else {
        // Hides the Redeem Button After Click
        $(".mainLegal").hide();
	    $("#init_redeem").hide();
	    $('#feedback').hide();

	    // Redeem date
        var d = redeemDateTime;
        var day = ("0"+d.getDate()).slice(-2);
        var month = ("0"+(d.getMonth() + 1)).slice(-2);
        var y = ("0"+d.getFullYear()).slice(-2);
	    $("#redeem_date").html(month + "/" + day + "/" + y)

	    // Countdown Timer
        $("#redeem").show();
        var countdownTime = $('#CountDownTime').text();
        var countdown = new Countdown({minutes: countdownTime, seconds: 00}, $(".c-container"));

        isRedeeming = true;
    }
}

function redeemOffer(data_post) {
    var actionUrl = '';

    if (isSmartSms){
        actionUrl = '/showsmartsms';
    }
    else{
        actionUrl = '/showredeem';
    }

    $.ajax({
        url: actionUrl,
        type: 'POST',
        data: data_post,
        async: false,
        cache: false,
        timeout: 30000,
            error: function(){
                $('#location_result').text('false,');
                return true;
            },
            success: function(msg){
                $('#location_result').text(msg);
                return true;
            }
        });
}

function iOSversion() {
    if (/iP(hone|od|ad)/.test(navigator.platform)) {
        // supports iOS 2.0 and later: <http://bit.ly/TJjs1V>
        var v = (navigator.appVersion).match(/OS (\d+)_(\d+)_?(\d+)?/);
        return [parseInt(v[1], 10), parseInt(v[2], 10), parseInt(v[3] || 0, 10)];
    }
}

function log_share_action(action, post_id) {
    var id = $('#id').text();
    var data_post = { 'id' : id, 'action': action, 'post_id':post_id};
    //var actionUrl = 'https://localhost:8383/raf/logshare'
    //var actionUrl = 'https://cfor2881-dot-rafworker-dot-mobivitysmartsms.appspot.com/raf/logshare';  // TODO HACK
    var actionUrl = 'https://rafworker-dot-mobivitysmartsms.appspot.com/raf/logshare';

    $.ajax({
        url: actionUrl,
        type: 'POST',
        data: data_post,
        async: true,
        cache: false,
        timeout: 30000,
            error: function(){
                $('#Achivements').text('false,');
                return true;
            },
            success: function(msg){
                $('#Achivements').text(msg);
                return true;
            }
        });
}

function sendSMSMsg() {

    if (ver == undefined){ //not iOS
        if (device.isAndroid){
            window.location.href = "sms:?body="+ androidEncode(shareSMSMsg);
        }
        else{
            window.location.href = "sms:?body="+ encode(shareSMSMsg);
        }
    }
    else{
        if (ver[0] < 8 ){ //body will populate on older versions 5,6 but not in 7
            window.location.href = "sms:;body="+ encode(shareSMSMsg);
        }
        else{ //body will populate only on version 8 or above
            window.location.href = "sms:&body="+ encode(shareSMSMsg);
        }
    }

    log_share_action('sms_click', '');
}

function sendFacebookMsg() {
    if (fb_post_done) {
        return true;
    }

    FB.ui({
		method: 'feed',
		link: $('#shareURL').text(),
        caption: "    ",
        picture: 'https://s3-us-west-2.amazonaws.com/donotdeletethis/SubwayFBShareImage.png',
        description: decodeURIComponent(shareFBMsg),
	    },function(response){
            if (response && response.post_id) {
                log_share_action('fb_post', response.post_id);
                fb_post_done = true;
            } else {
                log_share_action('fb_click', '');
            }
	    });
}

function sendTwitterMsg() {
    window.location.href = "twitter://post?message="+ encode(shareTwitterMsg);
    log_share_action('twitter_click', '');
}

function androidEncode(msg) {
    msg = msg.replace('&','and');
    return encode(msg);
}

function encode(msg) {
    msg = encodeURIComponent(msg);
    return msg;
}

function getUserAgent() {

    device = (function() {
        var ua = navigator.userAgent;
        var checker = {
          iphone: ua.match(/(iPhone|iPod|iPad)/),
          blackberry: ua.match(/BlackBerry/),
          android: ua.match(/Android/)
        };

        return {
            isAndroid : checker.android,
            isiOS : checker.iphone,
            isBlackberry : checker.blackberry
        };
    })();

    user_agent_string = navigator.userAgent;
    browser_cookies_enabled = navigator.cookieEnabled;
    browser_online = navigator.onLine;

    if (navigator.connection) {
        network = navigator.connection.type;
    }
}


// New Template
// main.min.js

function centerModals(a) {
    var b;
    b = a.length ? a : $(modalVerticalCenterClass + ":visible"), b.each(function(a) {
        var b = $(this).clone().css("display", "block").appendTo("body"),
            c = Math.round((b.height() - b.find(".modal-content").height()) / 2);
        c = c > 0 ? c : 0, b.remove(), $(this).find(".modal-content").css("margin-top", c)
    })
}

function _classCallCheck(a, b) {
    if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
}

var modalVerticalCenterClass = ".modal";
$(modalVerticalCenterClass).on("show.bs.modal", function(a) {
    centerModals($(this))
}), $(window).on("resize", centerModals);

var Util = function() {
        function a() {
            _classCallCheck(this, a)
        }
        return a.convertMS = function(a) {
            var b, c, d, e;
            return e = Math.floor(a / 1e3), d = Math.floor(e / 60), e %= 60, c = Math.floor(d / 60), d %= 60, b = Math.floor(c / 24), c %= 24, {
                d: b,
                h: c,
                m: d,
                s: e
            }
        }, a.addZ = function(a) {
            return 0 === a ? "00" : a ? (10 > a ? "0" : "") + a : "0"
        }, a.formatTime = function(b) {
            return b.d > 0 ? a.addZ(b.d) + "D " + a.addZ(b.h) + "H" : b.h > 0 ? a.addZ(b.h) + "H " + a.addZ(b.m) + "M" : a.addZ(b.m) + ":" + a.addZ(b.s)
        }, a
    }(),
    Countdown = function() {
        function a(b, c) {
            _classCallCheck(this, a), this.now = moment(), this.end = moment().add(b), this.diff = this.end.diff(this.now), this.$el = c, this.svg = Snap(this.$el.find("svg")[0]), this.progress = this.svg.select("#progress"), this.$txt = this.$el.find(".c-text"), this.initCircle(), this.initTimer()
        }
        return a.prototype.initCircle = function() {
            var a = this;
            a.progress.attr({
                strokeDasharray: "0, 301.44"
            }), Snap.animate(0, 301.44, function(b) {
                a.progress.attr({
                    "stroke-dasharray": b + ", 301.44"
                })
            }, a.diff)
        }, a.prototype.initTimer = function() {
            var a = this;
            a.timer = setInterval(function() {
                a.now = moment(), a.diff = a.end.diff(a.now), a.diff > 0 ? a.$txt.text(Util.formatTime(Util.convertMS(a.diff))) : (a.$txt.text("0:00"), clearInterval(a.timer), isRedeeming = false, isRedeemed = true, redeemDateTime = new Date(), showexpired())
            }, 200)
        }, a
    }();
! function(a) {
    "use strict";
    "function" == typeof define && define.amd ? define(["jquery"], a) : "undefined" != typeof module && module.exports ? module.exports = a(require("jquery")) : a(jQuery)
}(function(a) {
    var b = -1,
        c = -1,
        d = function(a) {
            return parseFloat(a) || 0
        },
        e = function(b) {
            var c = 1,
                e = a(b),
                f = null,
                g = [];
            return e.each(function() {
                var b = a(this),
                    e = b.offset().top - d(b.css("margin-top")),
                    h = g.length > 0 ? g[g.length - 1] : null;
                null === h ? g.push(b) : Math.floor(Math.abs(f - e)) <= c ? g[g.length - 1] = h.add(b) : g.push(b), f = e
            }), g
        },
        f = function(b) {
            var c = {
                byRow: !0,
                property: "height",
                target: null,
                remove: !1
            };
            return "object" == typeof b ? a.extend(c, b) : ("boolean" == typeof b ? c.byRow = b : "remove" === b && (c.remove = !0), c)
        },
        g = a.fn.matchHeight = function(b) {
            var c = f(b);
            if (c.remove) {
                var d = this;
                return this.css(c.property, ""), a.each(g._groups, function(a, b) {
                    b.elements = b.elements.not(d)
                }), this
            }
            return this.length <= 1 && !c.target ? this : (g._groups.push({
                elements: this,
                options: c
            }), g._apply(this, c), this)
        };
    g.version = "master", g._groups = [], g._throttle = 80, g._maintainScroll = !1, g._beforeUpdate = null, g._afterUpdate = null, g._rows = e, g._parse = d, g._parseOptions = f, g._apply = function(b, c) {
        var h = f(c),
            i = a(b),
            j = [i],
            k = a(window).scrollTop(),
            l = a("html").outerHeight(!0),
            m = i.parents().filter(":hidden");
        return m.each(function() {
            var b = a(this);
            b.data("style-cache", b.attr("style"))
        }), m.css("display", "block"), h.byRow && !h.target && (i.each(function() {
            var b = a(this),
                c = b.css("display");
            "inline-block" !== c && "flex" !== c && "inline-flex" !== c && (c = "block"), b.data("style-cache", b.attr("style")), b.css({
                display: c,
                "padding-top": "0",
                "padding-bottom": "0",
                "margin-top": "0",
                "margin-bottom": "0",
                "border-top-width": "0",
                "border-bottom-width": "0",
                height: "100px",
                overflow: "hidden"
            })
        }), j = e(i), i.each(function() {
            var b = a(this);
            b.attr("style", b.data("style-cache") || "")
        })), a.each(j, function(b, c) {
            var e = a(c),
                f = 0;
            if (h.target) f = h.target.outerHeight(!1);
            else {
                if (h.byRow && e.length <= 1) return void e.css(h.property, "");
                e.each(function() {
                    var b = a(this),
                        c = b.attr("style"),
                        d = b.css("display");
                    "inline-block" !== d && "flex" !== d && "inline-flex" !== d && (d = "block");
                    var e = {
                        display: d
                    };
                    e[h.property] = "", b.css(e), b.outerHeight(!1) > f && (f = b.outerHeight(!1)), c ? b.attr("style", c) : b.css("display", "")
                })
            }
            e.each(function() {
                var b = a(this),
                    c = 0;
                h.target && b.is(h.target) || ("border-box" !== b.css("box-sizing") && (c += d(b.css("border-top-width")) + d(b.css("border-bottom-width")), c += d(b.css("padding-top")) + d(b.css("padding-bottom"))), b.css(h.property, f - c + "px"))
            })
        }), m.each(function() {
            var b = a(this);
            b.attr("style", b.data("style-cache") || null)
        }), g._maintainScroll && a(window).scrollTop(k / l * a("html").outerHeight(!0)), this
    }, g._applyDataApi = function() {
        var b = {};
        a("[data-match-height], [data-mh]").each(function() {
            var c = a(this),
                d = c.attr("data-mh") || c.attr("data-match-height");
            d in b ? b[d] = b[d].add(c) : b[d] = c
        }), a.each(b, function() {
            this.matchHeight(!0)
        })
    };
    var h = function(b) {
        g._beforeUpdate && g._beforeUpdate(b, g._groups), a.each(g._groups, function() {
            g._apply(this.elements, this.options)
        }), g._afterUpdate && g._afterUpdate(b, g._groups)
    };
    g._update = function(d, e) {
        if (e && "resize" === e.type) {
            var f = a(window).width();
            if (f === b) return;
            b = f
        }
        d ? -1 === c && (c = setTimeout(function() {
            h(e), c = -1
        }, g._throttle)) : h(e)
    }, a(g._applyDataApi), a(window).bind("load", function(a) {
        g._update(!1, a)
    }), a(window).bind("resize orientationchange", function(a) {
        g._update(!0, a)
    })
});